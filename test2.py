#!/usr/bin/env python3  #组织行 ——源文件的头两个字符是#!
# -*- coding: utf-8 -*-

#---------------------------------------------------------------------------
#看书路线 简明python教程--笨办法学python3英文结合网页中文--python官方手册，库参考手册中文。--深入python3这书也不错。
#--爬虫的两本书都是用python2写的太老了，内容也很繁杂，不打算看网络爬虫了。
#---------------------------------------------------------------------------------

#简明python教程笔记。确实够简明，练习比较少，非常非常基础，缺少细节。

#获取帮助 help('print')

#常量：整数，长整数，浮点数，复数
#字符串：用单引号或双引号，三引号表示多行。转义符\ 例如需要用单引号需要加\'。自然字符串通过给字符串加上前缀r或R来指定。一定要用自然字符串处理正则表达式。否则会需要使用很多的反斜杠
#   Unicode字符串 字符串前加上前缀u或U。字符串是不可变的。两个字符串按字面意义相邻放着，他们会被Python自动级连。
#变量：字母下划线开头，字母数字下划线组成，大小写敏感。使用变量时只需要给它们赋一个值。不需要声明或定义数据类型。
#   强烈建议你坚持在每个物理行只写一句逻辑行。强烈建议 你在每个缩进层次使用 单个制表符 或 四个空格 。

#运算符表达式：加减乘除幂整除取模，左移右移，按位与或异或取反，大于小于大于等于小于等于等于不等于，布尔与或非。
#   优先级，建议使用圆括号分组。

#控制流：if elif else 。条件后面加冒号，else后面加冒号，分支程序块缩进。循环语句while else，else可选。
#   for 变量  in 序列:  程序块  else: 程序块。range(1, 5)函数生成序列，给出序列[1, 2, 3, 4]。range第三个参数成为步长，range(1,5,2)给出[1,3]。如果包含else，它总是在for循环结束后执行一次，除非遇到break语句。
#   break语句从for或while循环中 终止 ，任何对应的循环else块将不执行。continue语句被用来告诉Python跳过当前循环块中的剩余语句，然后 继续 进行下一轮循环。

#函数：函数通过def关键字定义，def关键字后跟一个函数的 标识符 名称，然后跟一对圆括号。圆括号之中可以包括一些变量名，该行以冒号结尾。接下来是一块语句，它们是函数体。
#   形式参数。局部变量。默认参数加=和默认值。关键参数使用关键字名字加=赋值。return返回值，缺省默认None
#   DocStrings文档字符串的惯例是一个多行字符串用'''  '''，它的首行以大写字母开始，句号结尾。第二行是空行，从第三行开始是详细的描述。使用__doc__（注意双下划线）调用函数的文档字符串属性（属于函数的名称）

#模块：模块是一个包含了所有定义的函数和变量的文件，文件名必须以.py为扩展名。import 模块名。使用时 模块名.成员名。想要直接输入argv变量到你的程序中使用from sys import argv语句 尽量少用。
#   模块的__name__，如果它=='__main__'，这说明这个模块被用户单独运行。dir()函数列出模块定义的标识符，使用del语句删除当前模块中的变量/属性

#数据结构：列表、元组和字典。列表中的项目应该包括在方括号中，每个项目之间用逗号分割，是 可变的 数据类型。Python为list类提供了append方法添加项，使用列表的sort方法来对列表排序，del shoplist[0]删除。
#   元组，是 不可变的 即你不能修改元组。元组通过圆括号中用逗号分割的项目定义。len函数可以用来获取元组的长度。索引运算符，通过一对方括号来指明某个项目的位置从而来访问元组中的项目
#       含有单个元素的元组，必须在第一个（唯一一个）项目后跟一个逗号，这样Python才能区分元组和表达式中一个带圆括号的对象。 元组最通常的用法是用在打印语句中
#   字典，d = {key1 : value1, key2 : value2 }键/值对用冒号分割，而各个对用逗号分割，所有这些都包括在花括号中。使用索引操作符来寻址一个键并为它赋值。字典的items方法返回一个元组的列表。in操作符来检验一个键/值对是否存在，dict类的has_key方法
#   序列的两个主要特点是索引操作符和切片操作符。索引操作符[-1]指的倒数第一个。切片操作符是序列名后跟一个方括号，方括号中有一对可选的数字，并用冒号分割。shoplist[1:3]结束位置被排斥在切片外
#   创建一个对象并给它赋一个变量的时候，这个变量仅仅 参考 那个对象，即指向同一内存单元。想要复制一个列表或者类似的序列或者其他复杂的对象，必须使用切片操作符来取得拷贝。
#   字符串都是str类的对象，startwith方法，in操作符，find方法，分隔符的字符串join方法。

#编写一个python脚本：备份文件。

#面向对象编程：python使用类和对象非常深入广泛，整数也作为int类的对象。属于一个对象或类的变量被称为域，函数被称为类的方法，域和方法可以合称为类的属性。
#   域有两种类型，分别被称为实例变量和类变量。
#   self 必须有一个额外的第一个特别的变量指对象本身，按照惯例它的名称是self。使用class语句后跟类名冒号，后面跟着一个缩进的语句块形成类体。pass什么也不做。
#   使用类名后跟一对圆括号来创建一个对象/实例。对象的方法与函数的区别只是一个额外的self变量，def sayHi(self):....注意sayHi方法没有任何参数，但仍然在函数定义时有self.
#   __init__方法在类的一个对象被建立时，马上运行。用来对对象做一些 初始化 。def __init__(self, name):....创建一个类的新实例的时候，把参数包括在圆括号内跟在类名后面
#   类的变量 由一个类的所有对象（实例）共享使用。当某个对象对类的变量做了改动的时候，这个改动会反映到所有其他的实例上。对象的变量 由类的每个对象/实例拥有。因此每个对象有自己对这个域的一份拷贝，即它们不是共享的.
#   继承，代码重用，把基本类的名称作为一个元组跟在定义类时的类名称之后。基本类的__init__方法专门使用self变量调用，Python不会自动调用基本类的constructor，你得亲自专门调用它。

#输入输出：通过创建一个file类的对象来打开一个文件，分别使用file类的read、readline或write方法来恰当地读写文件。对文件的读写能力依赖于你在打开文件时指定的模式。调用close方法来告诉Python我们完成了对文件的使用。
#   模式可以为读模式（'r'）、写模式（'w'）或追加模式（'a'）。读模式会作为默认的模式
#   Python提供一个标准的模块，称为pickle。可以在一个文件中储存任何Python对象， 持久地 储存对象。cPickle比pickle快1000倍。使用了import..as语法，dump() load().

#异常：try..except语句   使用raise语句 引发 异常   try..finally

#python标准库：sys模块，sys.argv,sys.version,sys.stdin、sys.stdout和sys.stderr它们分别对应你的程序的标准输入、标准输出和标准错误流。
#   os模块包含普遍的操作系统功能。如果你希望你的程序能够与平台无关的话，这个模块是尤为重要的。

#更多的内容：特殊方法 __init__(self,...)	__del__(self)	__str__(self)	__lt__(self,other)	__getitem__(self,key)	__len__(self)	
#   单语句块，强烈建议不要用。列表综合。使函数接收元组或字典形式的参数的时候，有一种特殊的方法，它分别使用*和**前缀。
#   匿名函数，lambda语句被用来创建新的函数对象，并且在运行时返回它们。只能使用表达式。
#   exec语句用来执行储存在字符串或文件中的Python语句，eval语句用来计算存储在字符串中的有效Python表达式。assert语句用来声明某个条件是真的。repr函数用来取得对象的规范字符串表示。

#图形软件GUI库。探索更多内容。
#附录A自由/开放源码软件（FLOSS），修订记录2005年1月。







